import { keyMirror } from "../../lib/keyMirror"

const GLOBAL_EVENT_NAMES = keyMirror({
  CLIENT_STARTED: null,
  UNHANDLED_PROMISE_REJECTION: null,
  UNHANDLED_ERROR: null,
  EVENT_QUEUE_FLUSHED: null,

  SCREEN_RENDERED: null,
  SCREEN_HIDDEN: null,
  USE_ASYNC_ERROR: null
})

const CAMERA_SCREEN_EVENT_NAMES = keyMirror({
  CAMERA_SCREEN_LOADING: null,
  CAMERA_SCREEN_ERROR: null,
  CAMERA_SCREEN_NO_STREAM: null
})

const USER_MEDIA_EVENT_NAMES = keyMirror({
  SUPPORTED_CONSTRAINTS: null,
  SUPPORTED_CONSTRAINTS_ERROR: null,
  MEDIA_DEVICES: null,
  MEDIA_DEVICES_ERROR: null,
  USER_MEDIA_STREAM: null,
  USER_MEDIA_STREAM_ERROR: null,
  MEDIA_PERMISSIONS_ERROR: null,
  GET_USER_MEDIA_ERROR: null,
  TRACK_CAPABILITIES: null,
  REQUEST_MEDIA_PERMISSIONS: null,
  TRACK_CAPABILITIES_ERROR: null,
  TRACK_CONSTRAINTS: null,
  TRACK_CONSTRAINTS_ERROR: null,
  TRACK_SETTINGS: null,
  TRACK_SETTINGS_ERROR: null,
  APPLY_CONSTRAINTS: null,
  APPLY_CONSTRAINTS_ERROR: null,
  STOP_STREAM: null,
  STOP_STREAM_ERROR: null,
  CAMERA_PERMISSIONS: null,
  CAMERA_PERMISSIONS_ERROR: null
})

const VIDEO_PLAYER_EVENT_NAMES = keyMirror({
  VIDEO_PLAYER_ERROR: null,
  VIDEO_PLAYER_PLAY: null,
  VIDEO_PLAYER_RATEC_HANGE: null,
  VIDEO_PLAYER_STALLED: null,
  VIDEO_PLAYER_LOADED_META_DATA: null,
  VIDEO_PLAYER_CAN_PLAY_THROUGH: null
})

const RENDER_UTILS_EVENT_NAMES = keyMirror({
  USE_RENDER_INFO: null
})

const ERROR_BOUNDARY_EVENT_NAMES = keyMirror({
  BOUNDARY_GET_DERIVED_STATE_FROM_ERROR: null,
  BOUNDARY_HAS_ERROR: null,
  BOUNDARY_DID_CATCH: null
})

const SENTRY = keyMirror({
  SENTRY_CAPTURE_EXCEPTION: null
})

export const EVENT_NAMES = {
  ...GLOBAL_EVENT_NAMES,
  ...CAMERA_SCREEN_EVENT_NAMES,
  ...VIDEO_PLAYER_EVENT_NAMES,
  ...USER_MEDIA_EVENT_NAMES,
  ...RENDER_UTILS_EVENT_NAMES,
  ...ERROR_BOUNDARY_EVENT_NAMES,
  ...SENTRY
}

export type AnalyticsEventName = keyof typeof EVENT_NAMES
